services:
  db:
    image: postgres:16
    container_name: eventhub-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-eventhub}
      POSTGRES_USER: ${POSTGRES_USER:-eventhub}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secret}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 20
    command:
      postgres
      -c shared_buffers=256MB
      -c work_mem=32MB
      -c maintenance_work_mem=256MB
      -c effective_cache_size=1GB
      -c max_connections=200
      -c synchronous_commit=off     # DEV: gyorsít, de csak fejlesztésre!

  backend:
    build:
      context: ../
      dockerfile: docker/apps/backend/Dockerfile
    container_name: eventhub-api
    depends_on:
      db:
        condition: service_healthy
    environment:
      APP_ENV: ${APP_ENV:-local}
      APP_KEY: ${APP_KEY:-}
      APP_DEBUG: ${APP_DEBUG:-true}
      APP_URL: ${APP_URL:-http://localhost:8000}
      LOG_CHANNEL: stack
      LOG_LEVEL: info

      # DB (PostgreSQL)
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${POSTGRES_DB:-eventhub}
      DB_USERNAME: ${POSTGRES_USER:-eventhub}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-secret}

      # CORS / SESSION (adjust as needed)
      SESSION_DRIVER: cookie
      SESSION_SECURE_COOKIE: "false"
      SESSION_DOMAIN: ""
      SANCTUM_STATEFUL_DOMAINS: "localhost,localhost:5173,localhost:8080"
      CORS_ALLOWED_ORIGINS: "http://localhost:5173,http://localhost:8080"
    ports:
      - "8000:8000"
    volumes:
      - ../apps/backend:/var/www/html
    command: ["/bin/sh", "/docker/entrypoint.sh"]

  frontend:
    build:
      context: ../
      dockerfile: docker/apps/frontend/Dockerfile
    container_name: eventhub-web
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:8000}
    depends_on:
      - backend
    ports:
      - "5173:5173"
    volumes:
      - ../apps/frontend:/app
    command: ["sh", "-c", "npm ci && npm run dev -- --host 0.0.0.0 --port 5173"]

  adminer:
    image: adminer
    container_name: eventhub-adminer
    restart: always
    ports:
      - "8081:8080"

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: eventhub-pgadmin
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: secret
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  db_data:
  pgadmin_data: